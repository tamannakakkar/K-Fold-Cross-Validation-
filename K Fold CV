
# STEP - 1 #

install.packages("titanic")
install.packages("rpart.plot")
install.packages("randomForest")
install.packages("DAAG")
library(titanic)
library(rpart.plot)
library(gmodels)
library(Hmisc)
library(pROC)
library(ResourceSelection)
library(car)
library(caret)
library(dplyr)
library(InformationValue)
library(rpart)
library(randomForest)
library("DAAG")

cat("\014") # Clearing the screen

getwd()
setwd("C:/Users/toshaan boss/Desktop/Term IV/AMMA/Asignment 2") 

#Reading files into dataframes
titanic_train_2<-read.csv('train.csv')
titanic_train<-titanic_train_2
titanic_train_3 <- read.csv('train.csv')

#Reading the test-3.csv into a dataframe
titanic_test_const <-read.csv('test-3.csv')

#Splitting the titanic train into 70% and 30% for making Training & Test Set
set.seed(1234) # for reproducibility
titanic_train$rand <- runif(nrow(titanic_train))
titanic_train_start <- titanic_train[titanic_train$rand <= 0.7,]
titanic_test_start <- titanic_train[titanic_train$rand > 0.7,]


# Number of survived vs number of dead
CrossTable(titanic_train$Survived)
# This gives the result that out of 891 total rows, 0.616 dies and 0.384 survived 

# Cleaning the data - Removing NA row entries

titanic_train <- titanic_train[!apply(titanic_train[,c("Pclass", "Sex", "SibSp", "Parch", "Fare", "Age")], 1, anyNA),]
titanic_train_NA_allcols <- titanic_train_2[!apply(titanic_train_2[,c("Pclass", "Sex", "SibSp", "Parch", "Fare", "Age")], 1, anyNA),]
nrow(titanic_train_2)
# titanic_train_2 still has 891 entries 

View(titanic_train_2)

# Cleaning the data - Replacing NA Age by mean age
mean_age = mean(titanic_train_2$Age)
titanic_train_mean_Tamanna <- titanic_train_start
titanic_train_mean_Tamanna2 <- titanic_train_start
titanic_train_mean_Tamanna$Age[is.na(titanic_train_mean_Tamanna$Age)] = mean(titanic_train_mean_Tamanna$Age, na.rm = TRUE)
titanic_train_mean_Tamanna2$Age[is.na(titanic_train_mean_Tamanna2$Age)] = mean(titanic_train_mean_Tamanna2$Age, na.rm = TRUE)

View(titanic_train_mean_Tamanna)
nrow(titanic_train_mean_Tamanna)

View(titanic_train_mean_Tamanna2)
nrow(titanic_train_mean_Tamanna2)
# STEP - 1 END #

# STEP - 2 START #

# Build model from mean imputed into the data set #

#glm
full.model.titanic.mean <- glm(formula = Survived ~ Pclass + Sex + SibSp + Parch + Fare + Age,
                               data=titanic_train_mean_Tamanna, family = binomial) #family = binomial implies that the type of regression is logistic

#lm
fit.train.mean <- lm(formula = Survived ~ Pclass + Sex + SibSp + Parch + Fare + Age,
                     data=titanic_train_mean_Tamanna2) #family = binomial implies that the type of regression is logistic
summary(fit.train.mean)

# VIF - Remove those variables which have vif >5 to treat multicollinearity
vif(fit.train.mean) 
#Results show that fornone of the variables VIF > 5

# Removing the variables that came insignificant in GLM MODEL (Parch & Fare)
titanic_train_mean_Tamanna$Parch<-NULL
full.model.titanic.mean <- glm(formula = Survived ~ Pclass + Sex + SibSp + Fare + Age,
                               data=titanic_train_mean_Tamanna, family = binomial) #family = binomial implies that the type of regression is logistic
summary(full.model.titanic.mean)

titanic_train_mean_Tamanna$Fare<-NULL
full.model.titanic.mean <- glm(formula = Survived ~ Pclass + Sex + SibSp + Age,
                               data=titanic_train_mean_Tamanna, family = binomial) #family = binomial implies that the type of regression is logistic
summary(full.model.titanic.mean)


#Testing performance on Train set

titanic_train_mean_Tamanna$prob = predict(full.model.titanic.mean, type=c("response"))
titanic_train_mean_Tamanna$Survived.pred = ifelse(titanic_train_mean_Tamanna$prob>=.5,'pred_yes','pred_no')
table(titanic_train_mean_Tamanna$Survived.pred,titanic_train_mean_Tamanna$Survived)
#This can be used to calculate Confusion Matrix for this set
#           0   1
#pred_no  328  65
#pred_yes  55 174

#Testing performance on test set
nrow(titanic_test)
titanic_test2_mean_Tamanna <- titanic_test_start
nrow(titanic_test2_mean_Tamanna)

#Imputation by replacing NAs by means in the test set
titanic_test2_mean_Tamanna$Age[is.na(titanic_test2_mean_Tamanna$Age)] = mean(titanic_test2_mean_Tamanna$Age, na.rm = TRUE)

titanic_test2_mean_Tamanna$prob = predict(full.model.titanic.mean, newdata=titanic_test2_mean_Tamanna, type=c("response"))
titanic_test2_mean_Tamanna$Survived.pred = ifelse(titanic_test2_mean_Tamanna$prob>=.5,'pred_yes','pred_no')
table(titanic_test2_mean_Tamanna$Survived.pred,titanic_test2_mean_Tamanna$Survived)

#           0   1
#pred_no  140  41
#pred_yes  26  62

# END - Model with mean included instead of NA #

# STEP - 2 END #

# STEP - 3 START #

### Testing for Jack n Rose's survival ###
df.jackrose <- read.csv('Book1.csv')
df.jackrose$prob = predict(full.model.titanic.mean, newdata=df.jackrose, type=c("response"))
df.jackrose$Survived.pred = ifelse(df.jackrose$prob>=.5,'pred_yes','pred_no')
head(df.jackrose)

# Jack dies, Rose survives

### END - Testing on Jack n Rose ###

# STEP - 3 END #

# STEP - 4 START #

## START  K-fold Cross Validation ##

# Defining the K Fold CV function
Kfold_func <- function(dataset,formula,family,k)
{
  object <- glm(formula=formula, data=dataset, family = family)
  CVbinary(object, nfolds= k, print.details=TRUE)
}

# Defining the function to calculate Mean Squared Error 
MeanSquareError_func <- function(dataset,formula)
{
  LM_Object <- lm(formula=formula, data=dataset)
  LM_Object_sum <-summary(LM_Object)
  MSE <- mean(LM_Object_sum$residuals^2)
  print("Mean squared error")
  print(MSE)
}

# Performing KFold CV on Training set by calling the KFOLD CV function 
Kfoldobj <- Kfold_func(titanic_train_mean_Tamanna,Survived ~ Pclass + Sex + SibSp + Age,binomial,10)

#Output - Internal estimate of accuracy = 0.807
#Output - Cross-validation estimate of accuracy = 0.802

# Calling the Mean Squared Error function on the training set 
MSE_Train <-MeanSquareError_func(titanic_train_mean_Tamanna,Survived ~ Pclass + Sex + SibSp + Age)
# Output - 0.1420293

# Confusion Matrix on Training Set
table(titanic_train_mean_Tamanna$Survived,round(Kfoldobj$cvhat))
print("Estimate of Accuracy")
print(Kfoldobj$acc.cv)
# Output - 0.8022508

#Performing KFold CV on test set by calling the KFOLD CV function 
Kfoldobj.test <- Kfold_func(titanic_test2_mean_Tamanna,Survived ~ Pclass + Sex + SibSp + Age,binomial,10)
#Outout - Internal estimate of accuracy = 0.792
#Output - Cross-validation estimate of accuracy = 0.784

#Calling the Mean Squared Error function on the test set
MSE_Test <-MeanSquareError_func(titanic_test2_mean_Tamanna,Survived ~ Pclass + Sex + SibSp + Age)
# Output - 0.1453662

#Confusion matrix on test set
table(titanic_test2_mean_Tamanna$Survived,round(Kfoldobj.test$cvhat))
print("Estimate of Accuracy")
print(Kfoldobj.test$acc.cv)
# Output - 0.7843866
#As expected, output is slightly better for train set as the model is built on it 


## END K-FOLD CROSS VALIDATION ##

# STEP - 4 END #
